#include<bits/stdc++.h>
using namespace std;

int dp[50];
struct node{
    int s,e,a;
};
bool cmp(node a,node b)
{
    if(a.e==b.e)return a.s<b.s;
    return a.e<b.e;
}
node p[3005];
void solve()
{
    memset(dp,0,sizeof(dp));
    int n;scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d%d%d",&p[i].s,&p[i].e,&p[i].a);
    sort(p,p+n,cmp);
    for(int i=0;i<n;i++)
        for(int j=p[i].s;j>=0;j--)
            dp[p[i].e]=max(dp[p[i].e],dp[j]+p[i].a);
    int ans = 0;
    for(int i=0;i<50;i++)
        ans=max(ans,dp[i]);
    cout<<ans<<endl;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)solve();
    return 0;
}

//בעיקרון מתחילים בקליטה של כל ההשכרות וממינים אותם לפי תאריך התחלה וסיום שקודם לו
לאחר מכן מכניסים לכל שדה עכשווי את המקסימום לנקודת זמן נוכחית של המחיר להשכרה 
לבסוף לוקחים את המקסימום של כל הימים ומציגים למסך

//Idan Lazar
